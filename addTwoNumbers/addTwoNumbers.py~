# Definition for singly-linked list.
class ListNode(object):
    def __init__(self, x):
        self.val = x
        self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """

        return_list = ListNode(l1.val + l2.val)
        temp_node = ListNode(-1)
        return_list.next = temp_node
        l1 = l1.next
        l2 = l2.next
        while(l1 or l2):
            if l1:
                l1_val = l1.val
            else:
                l1_val = 0

            if l2:
                l2_val = l2.val
            else:
                l2_val = 0
            temp_node.val = l1_val + l2.val
            temp_node_2 = ListNode(-2)
            temp_node.next = temp_node_2
            temp_node = temp_node.next
            
    
        print(return

Solution1 = Solution()

# make some test lists
l11 = ListNode(2)
l12 = ListNode(4)
l13 = ListNode(3)

l11.next = l12
l12.next = l13

l21 = ListNode(5)
l22 = ListNode(6)
l23 = ListNode(4)

l21.next = l22
l22.next = l23

# call the function
print(Solution1.addTwoNumbers(l11,l21).val)
